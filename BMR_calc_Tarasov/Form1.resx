<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW
        41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEO
        tTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL
        40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAO
        FBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40Bh
        MQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbj
        UAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61
        MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvj
        QGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4U
        FuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGEx
        DrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQ
        C+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUw
        DhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NA
        YTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW
        41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEO
        tTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL
        40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAO
        FBbjUAvjQGExDrUwDhQW41AL40BhMQ61MA4UFuNQC+NAYTEOtTAOFBbjUAvjQGExDrUwDhTWA8U7yFp2
        mczVu8T72dZdKUQhrSfeQdayC2Wu3ijez7bup0IU0gLxDrKWnS1z9RLxfrZ15wtRSPPlVvEOtFadInP1
        LPF+tnVnClFYl4p3oLVqkczVQvF+tnVHC1FYXxXvQGvVG6RL14n38y37NyEK6xjxDrRW7Sxd+pp4P9+y
        vYQorFeLd6C16C9iT7J2yf6V9S6jVXfJJkIU1jbiHWwtOku69iTxLqNVlwhRaPaKxe/EO+BaY29u6tqq
        co14l9OiY4UovKPEO+BaslQ2k1E6VLzLatGuQhTeLuIdcC05R0atyq9U14o9EiIKbxW5XLwDrxX7yjid
        Id7lteRDQtRb9v4A78BrwU/EBm6cniD2TL93uS34k2wsRL21tvxWvAMwu1fIJH1evMttwZFC1HuvEu8A
        zCzi8wSbyu/Fu/zM7LmG9YWo9+yh+ffEOxAzukUeJRG9Trw/I7P9hWhqbSf2TkPvYMwm+s7xKfH+nIxO
        E3uPCtFUs9/hvQMyE/tMSHRrynni/XmZ2CdpNxCimXS4eAdmBifLatJH9sy/nU3K+3MzsCeNo36VIhor
        e8j6CfEO0Fmyh9NdP1w1bjYQ3xfvz5+l6+VxQjTzbCDsTM1Z3gfwSenrEcPyrSv2CMX7/5gF+1XiMUKU
        Kjvnor3Zxjtop+FmOUCmnb168165Xbz/r2mxd3FuKEQpe4TM4sm6C2TW/2Lax7t/LN7/X5/sVSMbRV6V
        oPTZQ/oDZRrvpLxKXinjvi06Orvur5Wrxfv/jWSfMP2MbClETWXfd/FOsS+Q8Q7uSfxAbBTWkIzZ/5e9
        1NvHm8XskcJxsr0QNZ093LXzCCwW+5feO+C7sLMYfVjsQ1AtZW8Ye7/8SMZ90taeyzlJ7K3rDxCikm0h
        9tFpOz38iWKPAuyj4Pey39uXyGflg2L/7UOkQna6+z3lEDle7PwSF8my1/9isScXPy5vEhvDab36QkRE
        K2/evL8Bqc/89PKMoywAAAAASUVORK5CYII=
</value>
  </data>
</root>